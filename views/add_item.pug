extends templete.pug

block content
    
      
  .row
    .col.border.rounded.border-info.border-form.m-2.p-2.shadow-sm             
      form(action="/additem", method="POST")
        .input-group.col-12.mb-2
          .input-group-prepend
            .input-group-text Item name   
          input.form-control(type="text", list='itemsNames' , name="item", id="items", placeholder='Type item name here', required)
          datalist#itemsNames
              each item in itemsNames
                option(value=item._id)
                  | #{item._id}                    
            
        .input-group.col-12.mb-2      
          .input-group-prepend
            .input-group-text Qty 
          input.p-0.text-center(type="number", min='1', value='1', name="qty", placeholder='Quantity', required)
        
        .input-group.col-12.mb-2
          .input-group-prepend
            .input-group-text Price           
          input.p-0.text-center(type="number", min='0', step=".01", name="price", placeholder='Type price here', required)
        .input-group.col-12.mb-2       
          .input-group-prepend
            .input-group-text Date 
          input.p-0.text-center(type="date", value = new Date().toISOString().substr(0, 10), name="date", placeholder='Type date of purchased', required)
        .form-check.mb-2.mr-sm-2
          input#inlineFormCheck.form-check-input(type='radio', name="owner", value="Gosia", required, checked)
          label.form-check-label(for='inlineFormCheck')
              | Gosia
        .form-check.mb-2.mr-sm-2
          input#inlineFormCheck.form-check-input(type='radio', name="owner", value="Marcin", required)
          label.form-check-label(for='inlineFormCheck')
              | Marcin          
        .input-group.col-12.mb-2
          .input-group-prepend
            .input-group-text Category  
          input.p-0.text-center(name="category", list="categories", placeholder='Type category name', required)
          datalist#categories
              each category in categories
                option(value=category._id)
                  | #{category._id}
          input(type='hidden', name='_csrf', value=csrfToken)
        .col-12         
          input.btn.btn-success.w-100(type="submit")

    //- .col.border.border-info.rounded.m-2 

    .col.border.rounded.border-info.border-form.m-2.p-2.shadow-sm
      .row
        .col-8
          h4.text-center Lista 5 ostatnio dodanych wydatków
        .col-1
          form(action="/additem", method="get")
            input(type='hidden', name="enableDelete", value=1)
            button(type="submit").btn.btn-danger.btn-sm Enable delete
      .row
      table.table.mt-2
          thead.bg-info
              tr
                  th(scope='col') #
                  th(scope='col') Nazwa
                  th.text-center(scope='col') Ilość
                  th.text-center(scope='col') Cena
                  th.text-center(scope='col') Dzień zakupu
                  th.text-center(scope='col') Kategoria
                  if enableDelete
                    th.text-center(scope='col') Usuń
          tbody
          each data, index in lastfiveAdded
            form(action="/deleteItem", method="POST")
              tr
              th(scope='row') #{index+1}
                  td #{data._id.item}
                  td.text-center #{data._id.qty} szt.
                  td.text-center #{data._id.price.toFixed(2)} zł.
                  td.text-center #{data._id.day}  #{month[data._id.month-1]}
                  td.text-center #{data._id.category}
                  if enableDelete
                    td.text-center
                      button(type="submit").btn.btn-danger.btn-sm X   
                  input(type='hidden', name='id', value=data._id.id)
                  input(type='hidden', name='_csrf', value=csrfToken)


     
            

      
    